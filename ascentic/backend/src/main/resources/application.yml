jwt:
  secret-key: c22842d6d972c3344bc6b02882f4ee97df876582809b9ae10e03abbd49a8c49f3043072f1b313cda6f65a23f99a2d90621a1225c7b0ad2f669a94d074b43abec
  # 1800 => 30 * 60 (1800초)
  token-validity-in-seconds: 1800

logging:
  level:
    com.backend: DEBUG

smsapi:
  key: NCSJWR1HCFQOGI9P
  secret: 62U0TYOWLEC2O9HES0LEWTMRCX3HF7G2

server:
  tomcat:
    max-http-form-post-size: 100000000
    max-swallow-size: 100000000

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ascentic?serverTimezone=Asia/Seoul
    username: root
    password: 123456


  jpa:
    # true: 트랜잭션이 완료되도 영속성 컨텍스트는 유지된다.
    # false: 트랜잭션을 종료할 때 영속성 컨텍스트는 종료된다.
    open-in-view: true # true: 기본값
    hibernate:
      # create : 기존의 테이블을 drop 하고 다시 생성하는 것. 애플리케이션이 실행되는 시점에 drop하고 create가 일어난다.
      # update : 기존에 테이블이 없을 때는 새로 생성하지만 있으면 그대로 유지. 테이블에 추가되는 컬럼이 존재하면 해당 테이블을 업데이트 한다.
      ddl-auto: create
      naming:
        # 엔티티(테이블)를 만들때 변수명 그대로 테이블 필드(컬럼)를 만든다.
        # 엔티티: 테이블을 만들 수 있는 클래스
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true # 콘솔창에 sql 명령문을 출력
    properties:
      hibernate.format_sql: true # sql 명령문을 보기 좋게 보여준다.

    defer-datasource-initialization: true #기본 더미 데이터 채우기


  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      # window
      location: c:\\Project\\ascentic_file
#      location: e:\\Project\\ascentic_file
      # mac
#      location: /Users/sungbincho/Desktop/ascenticfile
#      location: /Users/hansic/Desktop/ascenticImg
      #location: /Users/jo4921/ascentic_file
      #location: /Users/user/ascentic

  data:
    redis:
      host: localhost
      port: 6379

  mail:
    # Google smtp server 사용
    host: smtp.gmail.com
    port: 587
    username: 2201skgotjd@gmail.com
    password: pysbypycthfairxt
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
  sql:
    init:
      mode: always #모든 sql 스크립트 실행
      data-locations:
          - classpath:scent.sql
          - classpath:product.sql
          - classpath:product_option.sql
          - classpath:cart.sql
          - classpath:order.sql
          - classpath:orderProduct.sql
          - classpath:wish.sql
          - classpath:subscribeMember.sql
          - classpath:taste.sql
          - classpath:subscribeProd.sql
          - classpath:subscribeSend.sql
          - classpath:prodImage.sql
          - classpath:review.sql
          - classpath:inquiry.sql
          - classpath:member.sql
          - classpath:eventnews.sql
          - classpath:subscribeCard.sql
          - classpath:subscribePayment.sql
          - classpath:card.sql
          - classpath:easyPay.sql
          - classpath:orderPaymentReceipt.sql


# 멤버 이미지, 전화번호(-) 빼기
# subscribeMember.sql (member_name, member_tel, member_addr 수정)

